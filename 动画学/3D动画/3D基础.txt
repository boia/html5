	到目前为止，所做的任何内容都只是二维的，创建3D图形总是让人激动的，额外的维度使看起来更接近我们的生活


1.第3维和透视

	不言而喻，3D背后的主要概念是在x和y之外存在着另一维度。这一维度就是深度，通常被标识为z

1.1.z轴

	开始时，需要决定z轴是哪个方向:进或出。使用右手定理，食指指向正的x轴，中指指向正的y轴，那么拇指就是正的z轴，通常向里

1.2.透视

	透视就是我们怎样表示某个物体靠近我们或远离我们。换种方式说，我们怎样使某物体看起来它是在近处或远处，这里归纳为两点：
	①  当物体离我们越远时它们变得越小
	②  物体如果离我们足够远它们会聚集在一个灭点上

	需要在z轴上移动某物体时，需要做两件事情:
	①  把它放大或缩小
	②  移动物体靠近或远离灭点

	在3D中移动的每一个物体都需要有它自己的与屏幕位置无关的x、y和z坐标。这些坐标描述的是虚拟空间中的一个位置。透视计算可以告诉你将物体放在屏幕的哪个位置

1.2.1.透视公式

	基本的思路是当某物体离我们越来越远，它的缩放比例趋近于0并且它的x、y位置会聚在灭点的0,0上
	看一下公式 scale=f1/(f1+z)   
	scale是缩放比例，f1是视点离屏幕位置，它产生的值通常在0-1之间，它就是缩放和聚为灭点的比例

	让我们举个例子。通常f1的值约为200-300，可以使用250，如果z是0，物体正好在图像平面上――那么缩放将是1，所以x和y值正好没变
	现在将物体移出去使z是250，这使得scale为250/(250+250)，使scaleX和scaleY为0.5.它也移动了物体在屏幕上的位置，如果物体原来在的x，y位置为200,300，那么它的屏幕位置现在是100,150。它已经移动到距离灭点一半的位置。
	现在，沿z方向移动到9750，这使得scale为250/10000，或scaleX和scaleY为0.025，物体变成一个小点，已经非常接近灭点了。

1.2.2.html5透视

	

实例 https://github.com/boia/html5/blob/animation/动画学/3D动画/透视.html


基本的透视

	scale = f1/(f1+zpos);
	alpha = scale;  //可选的
	x = xpos*scale;
	y = ypos*scale;

坐标旋转

	x1 = cos(angle)*xpos-sin(angle)*ypos;
	y1 = cos(angle)*ypos+sin(angle)*xpos;
	
	x1 = cos(angle)*xpos-sin(angle)*zpos;
	z1 = cos(angle)*zpos+sin(angle)*xpos;

	y1 = cos(angle)*ypos-sin(angle)*zpos;
	z1 = cos(angle)*zpos+sin(angle)*ypos;

3D距离

	dist = Math.sqrt(dx*dx+dy*dy+dz*dz);