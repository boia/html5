1.颜色

	24位色，使用RGB颜色，意味着每一种颜色都是由红、绿和蓝组成，每一种都有从0到255的值，系统称为24位色，因为使用的8位(1或0，8*3)来表示数字256。另外还有32位的颜色系统，额外的8位用的是alpha，即透明度，采用16进制来表示颜色。

1.1.使用16进制颜色值	

	toString(16)可以将数字转换为16进制的字符串。


1.2.透明度和32位色
	
	可以按照OxRRGGBB格式创建一个24位色，使用0xAARRGGBB来创建32位色

1.3.组合颜色

	假设有3个变量，每一个都保存着从0到255的一个数值，并且你想使用它们创建一个可以实际应用的颜色值，下面是实现它的公式
	color24 = red << 16 | green << 8 | blue;如果还有alpha值，那就在或一个alpha << 24

1.4.提取组成色

	red = color24 >> 16; green = color24 >> 8 & 0xff;blue = color24 & 0xff;

2.drawing API

	应用程序接口，API是指一系列的方法和属性，可以在程序中使用它来访问一系列相关的行为和属性。drawing API是指允许你通过程序绘制线条、曲线、填充、渐变填充等的属性和方法。
	可以使用CanvasRenderingContext2D对象的一些属性来模拟  AS3中的lineStyle()、beginFill()、endFill()等方法；
	lineTo()和moveTo()是绘直线；
	quadraticCurveTo(cpX, cpY, x, y)绘制贝塞尔曲线，使用两个，第一个点是控制点，第二个点是曲线结束点，他会朝向控制点弯曲，不会碰到控制点。要使曲线穿过控制点，可以使用公式  (x1,y1)为控制点,  
	x1 = e.clientX*2-(x0+x2)/2     y1 = e.clientY * 2 - (y0+y2)/2
	上式的推导过程 可查看http://blog.csdn.net/boiaprogramfan0420/article/details/7455523      根据三角形中点定理推导出

2.1.渐变填充
	可以使用createLinearGradient()和createRadialGradient()来模拟flash中beginGradientFill()函数

2.2.颜色变换

	在flash中有一个颜色变换的类，传入的参数是一个矩阵，类似html5中的transform()

2.3.滤镜
	滤镜是可以应用于任何显示对象的位图效果
	在AS3中所包含的滤镜有: 投影、模糊、发光、浮雕、渐变浮雕、渐变发光、颜色矩阵、卷积滤镜和置换贴图，在html5中也可以模拟

2.4.位图

	getImageData()   createImageData()  putImageData()  访问像素点	

2.5.载入内容
	
	最后一个渲染图形的重要内容是获取外部内容，如位图或视频
	drawImage()


在本章中收集了一些更有用的工具，多数是用来处理颜色

	实例代码 https://github.com/boia/html5/blob/animation/动画学/渲染.html

 