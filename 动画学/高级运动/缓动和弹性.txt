本章将涉及缓动(比例速度)和弹性(比例加速度)

1.比例运动

	缓动和弹性有着紧密的联系，这两种技术都涉及使一个物体从现有的位置移动到目标位置。在缓动中，精灵以滑动的方式到达目标点并停止。在弹性中，它有一些来回弹跳的动作，最终停止在目标位置。
	这两种技术都有公共特点:
	①需要设定一个目标位置
	②需要检测出距目标点的距离
	③运动是与距离成正比的――距离越大，强大越大

	在缓动中，速度和距离成正比，距离目标点越远，物体移动得就越快，当它非常接近物体时，它几乎不移动。
	在弹性中，加速度与距离成正比。如果物体与目标点离得越远，就会被指定一个很大的加速度，速度会很快增加。当物体接近它的目标点时，加速度就会很小，但它仍在加速！它会穿过目标，然后加速度再将它拉回来，最后，摩擦力会使它停下来。


2.缓动

	缓动并不只有一种类型，在flash IDE中，你可以进行"缓入"和"缓出"，这里我们将要讨论的是缓出。

2.1.简单的缓动

	简单的缓动是一个非常基础的概念。有一个物体在这里，并且想将它移动到那里，因为你要创建"运动错觉"，所以你想渐进地移动它，通过几帧来移动，你可以简单地找到两点之间的角度。
	当你使用缓动移动一个物体到一个位置时，它会自动呈现出一个非常自然的外观。其中最酷的事情简单的缓动是非常容易做到的。
	这里是缓动的思路：
	(1)设定一个比例系数，它将是一个比1小的数值。
	(2)指定你的目标点
	(3)计算物体到目标点之间的距离
	(4)将距离与比例系数相乘。这是你的速度。
	(5)加入速度值给当前物体的位置。
	(6)重复第3步到第5步直到物体到达目标点。

2.2.何时停止缓动

	我们现在思考一个问题，将一张纸折成1/2，然后折成1/4，接着继续，假设这张纸可以被无穷的折下去(这个不能成立，9次貌似是极限)，这样的话永远都不能折成0，现在咱回到缓动的问题，每次都乘以一个数，那么其实速度也永远达不到0，可能在视觉上你的物体已经停止了，你可以用alert(ball.x)来测试你看上去已经停止的物体，发现其实无限地接近于目的地，可就是不能达到。
	关于twip的概念，它是一个像素点的1/20,这里不做讨论，如果一个物体距离它的目标点小于1像素点，那么就可以关闭缓动了


2.3.移动的目标

	到目前为止，目标点都是单一的、固定的位置，但这并不是必需的，那么我们就可以将移动的鼠标作为目的地。

以上实例  https://github.com/boia/html5/blob/animation/动画学/高级运动/缓动.html


2.4.缓动不只是应用于运动

	通常，都把缓动应用在了x和y的速度上，但记住，所有以数值为属性描述的你都可以用缓动来操作它。如以下部分
	①透明度 注意alpha是从0-1.0的值  ②旋转  ③颜色

2.5.高级缓动

	你已经明白简单的缓动是如何工作了，可能会考虑使用更复杂的缓动公式来制作一些特殊的效果。例如，你可能想让某个物体缓慢地开始，加速，然后当接近目标时在慢下来，或者想让某物体在某个时间内或某些帧内缓动到指定的位置。
	可以再www.robertpenner.com找到他的缓动公式，将flash公式应用到html5中

3.弹性

	keith peters曾认为弹性是动画中最强大、最有用的物理概念   弹簧 f = kx;  ma = kx;  所以a和距离成正比

3.1.一维弹性
	就是在一个轴上使用弹性，要是会了二维肯定会一维了。
	
3.2.二维弹性
	毫无疑问使用两个轴使用弹性，因为要是没有摩擦力阻碍小球运动，他将不间断地来回像弹簧一样运动(弹簧也不能永动)，所以可以加入摩擦力，使它最终停下来。

实例  https://github.com/boia/html5/blob/animation/动画学/高级运动/二维弹性.html

3.3.移动目标点的弹性

	在前面的缓动中，我们就说过将鼠标作为目标，这里我们也可以这样做，以鼠标为目标，小球发生弹性运动

3.4.弹性在哪儿
	你可以通过一根线拉小球，使小球拥有重力(向下的加速度)，那么就可以模拟现实生活中溜溜球的效果了
	小球跟着鼠标做弹性运动，我们可以加入一根绳更加形象生动地描述

实例  https://github.com/boia/html5/blob/animation/动画学/高级运动/鼠标拉球.html

3.5.弹性链
	绑定多个小球组成一个链子，像灯笼一样

实例  https://github.com/boia/html5/blob/animation/动画学/高级运动/弹性链.html

3.6.多目标点弹性

	我们之前讨论过怎样可以使多个力作用在同一个物体上。每一个力就是一个加速度，你只要逐个地将它们加到速度上。
	弹性也无非是加在物体上的一个加速度，所以创建作用在多个物体上的多个弹性动作是很简单的

	随机三个物体的位置，使小球能够在这三物体中平衡。结合之前说过的模拟拖放事件

实例  https://github.com/boia/html5/blob/animation/动画学/高级运动/多目标点.html
实例有个bug，只有最后一个固定物体有效了

3.7.目标偏移

	如果是真正的弹簧呢，那么它的目标点在哪儿呢？咱们说的目标点其实就是当它的弹性加速度是0的时候
	那么毫无疑问，弹性加速度是0的情况只能是弹簧自然伸长的情况，代码和上面部分类似，只是目标点变了	

3.8.使用弹性添加多个物体

	我已经知道了如何使一个物体弹到一个点上，并且知道那个点不一定是固定的，我甚至可以让一个物体弹到另外一个物体。
	那让另外一个物体弹回到第一个物体怎么样呢？那么这两个物体应当是通过一个弹簧连接到一起


HTML5 canvas拖动事件是个巨大的挑战






