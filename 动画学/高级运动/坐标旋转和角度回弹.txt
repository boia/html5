	围绕一个点的坐标旋转

1.简单的坐标旋转

	有一个中心点、一个物体、一个半径和一个角。不要忘记角用的是弧度
	如果你前面忘了，可以回基础看看圆周那部分，巩固一下知识

实例  https://github.com/boia/html5/blob/animation/动画学/高级运动/基本圆周.html

	我把例子放到这里，你就不用辛苦找了

2.高级坐标旋转

	先说一个公式
	x1 = cos(angle)*x-sin(angle)*y;
	y1 = cos(angle)*y+sin(angle)*x;
	x和y代表着你要旋转物体的坐标，而且，它们是相对于要围绕其旋转的中心点的物体坐标，得到的(x1,y1)也一样
	这里的angle是每一帧旋转的角度，切记，是弧度

2.1.旋转一个物体

	好吧，其实我也没有真正的懂这个公式，不过你以后会知道这个公式的好处的，可能就在下一节

实例  https://github.com/boia/html5/blob/animation/动画学/高级运动/高级圆周.html

2.2.旋转多个物体

	这时候，我们要处理n个小球的旋转，可能n=30，你需要放到一个for循环中，现在你发现之前简单的旋转貌似有很多需要计算的
	而高级旋转计算的基本都是常数，这时候算法又优化了

3.沿角度回弹

	我们可以处理在水平的、垂直的墙面上做反弹，可是，现实生活中有很多都是带角度的障碍物，这时候该怎么处理呢？
	现在来处理这个问题需要3个步骤：
	①确定你何时通过一个边界
	②重置物体以使他直接靠在边界位置上
	③在碰撞的轴向上反转速度

	先将系统旋转到水平，然后实行碰撞以后，旋转速度，然后将系统旋转回来

3.1.执行旋转

3.2.优化代码

3.3.动态化

3.4.修复"脱离边界"问题

3.5.多角度回弹

